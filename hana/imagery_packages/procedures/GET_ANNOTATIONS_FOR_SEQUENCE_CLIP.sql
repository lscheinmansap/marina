CREATE OR REPLACE PROCEDURE GET_ANNOTATIONS_FOR_SEQUENCE_CLIP
(
	IN  IN_SEQUENCE_CLIP_UUID VARCHAR(36),
	IN  FILTER_OBJECT_IDS_LIST VARCHAR(5000),
	OUT ANNOTATIONS	
		TABLE 
		(
			SEQ_FRAME INTEGER,
			OBJECT_NAME VARCHAR(100),
			LABEL_NAME VARCHAR(100),
			ANNOTATION_TYPE VARCHAR(20),
			COORDS VARCHAR(400),
			ANNOTATION_GEO_POLYGON_AS_GEOJSON CLOB
		)
)
LANGUAGE SQLSCRIPT AS
BEGIN
	DECLARE FILTER_OBJECT_IDS_TBL TABLE(OBJECT_ID NVARCHAR(5000));

	if length(FILTER_OBJECT_IDS_LIST) > 0
	then
		FILTER_OBJECT_IDS_TBL = 
			select VAL as OBJECT_ID
			from FN_SPLIT_LIST_STRING(:FILTER_OBJECT_IDS_LIST, ',')
			where LENGTH(VAL) > 0;
	else
		FILTER_OBJECT_IDS_TBL = 
			select distinct A.OBJECT_ID
			from SEQUENCE_FRAME_TRACK_ANNOTATION A
			inner join SEQUENCE_FRAME F on F.SEQUENCE_FRAME_UUID = A.SEQUENCE_FRAME_UUID
			where F.SEQUENCE_CLIP_UUID = :IN_SEQUENCE_CLIP_UUID;
	end if;
	
	ANNOTATIONS = 
		select 
			A.SEQ_FRAME,
			A.OBJECT_NAME,
			A.LABEL_NAME,
			A.ANNOTATION_TYPE,
			A.COORDS,
			A.ANNOTATION_GEO_POLYGON.ST_AsGeoJSON() as ANNOTATION_GEO_POLYGON_AS_GEOJSON
		from SEQUENCE_FRAME_TRACK_ANNOTATION A
		inner join SEQUENCE_FRAME F on F.SEQUENCE_FRAME_UUID = A.SEQUENCE_FRAME_UUID
		where F.SEQUENCE_CLIP_UUID = :IN_SEQUENCE_CLIP_UUID
		and A.OBJECT_ID in 
			(
				select OBJECT_ID 
				from :FILTER_OBJECT_IDS_TBL
			);
	
END