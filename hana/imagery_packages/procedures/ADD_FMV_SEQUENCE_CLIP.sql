CREATE OR REPLACE PROCEDURE ADD_FMV_SEQUENCE_CLIP
(
	IN NEW_IMAGERY_PACKAGE_UUID VARCHAR(36),
	IN IMAGERY_PACKAGE_NAME VARCHAR(100),
	IN BATCH_NAME 		    VARCHAR(200),
	IN SEQUENCE_CLIP_UUID	VARCHAR(36), 
	IN DERIVATION_TYPE      VARCHAR(50),
	IN ORIGIN_ID            VARCHAR(100),
	IN SRC_RECORD_KEY       BIGINT,
	IN CLIP_NAME			VARCHAR(200),
	IN CLIP_VIDEO_OFFSET_SECONDS INTEGER,
	IN START_TIMESTAMP 		TIMESTAMP,
	IN END_TIMESTAMP		TIMESTAMP,
	IN TE_DESIGNATION       VARCHAR(20),
	IN VERSION				VARCHAR(10),
	IN MASK_ID				INTEGER,
	IN CODEC_NAME		 	VARCHAR(20),
	IN HEIGHT				INTEGER,
	IN WIDTH				INTEGER,
	IN PIX_FMT				VARCHAR(20),
	IN BIT_RATE				INTEGER,
	IN DURATION_SECONDS		DOUBLE,
	IN BITS_PER_RAW_SAMPLE	INTEGER,
	IN KLV_NAME				VARCHAR(20),
	IN FRAME_COUNT			INTEGER,
	IN STREAM_COUNT			INTEGER,
	IN FORMAT_NAME			VARCHAR(40),
	IN FPS					DOUBLE,
	IN VIDEO_SIZE_BYTES		BIGINT,
	IN SEQUENCE_CLIP_FILE_PATH VARCHAR(200),
	IN FILE_LAST_MODIFIED_TIMESTAMP TIMESTAMP,
	IN FILE_SIZE_BYTES      BIGINT,
	OUT RETURN_IMAGERY_PACKAGE_UUID
		TABLE 
		(
			IMAGERY_PACKAGE_UUID VARCHAR(36)
		)
)
LANGUAGE SQLSCRIPT AS
BEGIN

	DECLARE AUTO_ANNOTATE INTEGER;
	DECLARE AUTO_ANNOTATE_MODELER VARCHAR(50);
	DECLARE AUTO_ANNOTATE_ANALYSIS_TYPE VARCHAR(20);
	DECLARE IMAGERY_PACKAGE_GEO_AREA_STR CLOB;
	DECLARE IMAGERY_PACKAGE_EXISTS INTEGER;
	DECLARE CURRENT_IMAGERY_PACKAGE_UUID VARCHAR(36);
	DECLARE NEW_ANNOTATION_PACKAGE_UUID VARCHAR(36);

	select count(1) into IMAGERY_PACKAGE_EXISTS
	from VIDEO 
	where SRC_RECORD_KEY = :SRC_RECORD_KEY;

	if :IMAGERY_PACKAGE_EXISTS = 1
	then
		select IMAGERY_PACKAGE_UUID into CURRENT_IMAGERY_PACKAGE_UUID
		from VIDEO 
		where SRC_RECORD_KEY = :SRC_RECORD_KEY;
	else
		-- Create the VIDEO and IMAGERY_PACKAGE_RECORDS for the new clip
		CURRENT_IMAGERY_PACKAGE_UUID = :NEW_IMAGERY_PACKAGE_UUID;
		insert into VIDEO 
		(
			IMAGERY_PACKAGE_UUID,
			CLASSIFICATION,
			DERIVATION_TYPE,
			ORIGIN_ID,
			SRC_RECORD_KEY,
			CODEC_NAME,
			HEIGHT,
			WIDTH,
			PIX_FMT,
			BIT_RATE,
			DURATION_SECONDS,
			BITS_PER_RAW_SAMPLE,
			KLV_NAME,
			FRAME_COUNT,
			STREAM_COUNT,
			FORMAT_NAME,
			FPS,
			VIDEO_SIZE_BYTES,
			INSERTION_TIMESTAMP
		)
		values
		(
			:CURRENT_IMAGERY_PACKAGE_UUID,
			'Unclassified',
			:DERIVATION_TYPE,
			:ORIGIN_ID,
			:SRC_RECORD_KEY,
			:CODEC_NAME,
			:HEIGHT,
			:WIDTH,
			:PIX_FMT,
			:BIT_RATE,
			:DURATION_SECONDS,
			:BITS_PER_RAW_SAMPLE,
			:KLV_NAME,
			:FRAME_COUNT,
			:STREAM_COUNT,
			:FORMAT_NAME,
			:FPS,
			:VIDEO_SIZE_BYTES,
			CURRENT_TIMESTAMP
		);

		CALL ADD_FMV_IMAGERY_PACKAGE_DATA_CARD(:CURRENT_IMAGERY_PACKAGE_UUID, :BATCH_NAME, :IMAGERY_PACKAGE_NAME);
	end if;

	RETURN_IMAGERY_PACKAGE_UUID = 
		select IMAGERY_PACKAGE_UUID
		from VIDEO 
		where SRC_RECORD_KEY = :SRC_RECORD_KEY;
		
	insert into SEQUENCE_CLIP
	(
		SEQUENCE_CLIP_UUID,
		IMAGERY_PACKAGE_UUID,
		CLASSIFICATION,
		BATCH_NAME,
		CLIP_NAME,
		CLIP_VIDEO_OFFSET_SECONDS,
		TE_DESIGNATION,
		START_TIMESTAMP,
		END_TIMESTAMP,
		MASK_ID,
		SEQUENCE_CLIP_FILE_PATH,
		FILE_LAST_MODIFIED_TIMESTAMP,
		FILE_SIZE_BYTES,
		INSERTION_TIMESTAMP
	)
	values
	(
		:SEQUENCE_CLIP_UUID,
		:CURRENT_IMAGERY_PACKAGE_UUID,
		'Unclassified',
		:BATCH_NAME,
		:CLIP_NAME,
		:CLIP_VIDEO_OFFSET_SECONDS,
		:TE_DESIGNATION,
		:START_TIMESTAMP,
		:END_TIMESTAMP,
		:MASK_ID,
		:SEQUENCE_CLIP_FILE_PATH,
		:FILE_LAST_MODIFIED_TIMESTAMP,
		:FILE_SIZE_BYTES,
		CURRENT_TIMESTAMP
	);

	select count(1) into AUTO_ANNOTATE
	from SYSTEM_PROPERTY 
	where PROPERTY_NAME = 'AUTO_ANNOTATE'
	and PROPERTY_VALUE = 'YES';

	if :AUTO_ANNOTATE = 1
	then
		select PROPERTY_VALUE into AUTO_ANNOTATE_MODELER
		from SYSTEM_PROPERTY
		where PROPERTY_NAME = 'AUTO_ANNOTATE_MODELER';
		select PROPERTY_VALUE into AUTO_ANNOTATE_ANALYSIS_TYPE
		from SYSTEM_PROPERTY
		where PROPERTY_NAME = 'AUTO_ANNOTATE_ANALYSIS_TYPE';
		CALL CREATE_ANNOTATION_REQUEST(
			:CURRENT_IMAGERY_PACKAGE_UUID,
			:SEQUENCE_CLIP_UUID,
			NULL,
			:AUTO_ANNOTATE_MODELER,
			:AUTO_ANNOTATE_ANALYSIS_TYPE,
			CURRENT_USER,
			:NEW_ANNOTATION_PACKAGE_UUID);
	end if;
	
END;