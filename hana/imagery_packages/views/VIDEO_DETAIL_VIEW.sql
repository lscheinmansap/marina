CREATE VIEW VIDEO_DETAIL_VIEW
as
select distinct 
	V.*,
	F.IMAGERY_START_TIME_STAMP,
	F.IMAGERY_END_TIME_STAMP,
	F.FIRST_FRAME_FILEPATH,
	F.CLASSIFYING_COUNTRY,
	F.IMAGE_SOURCE_SENSOR,
	F.IMAGE_COORDINATE_SYSTEM,
	F.MISSION_ID,
	F.PLATFORM_TYPE,
	F.SENSOR_BAND,
	F.TAIL_NUMBER,
	F.CLIP_COUNT,
	F.SEQUENCE_FRAME_COUNT
from VIDEO V
    inner join
	(	
		select 
			IMAGERY_PACKAGE_UUID,
			min(ORIGINAL_TIMESTAMP) as IMAGERY_START_TIME_STAMP,
			max(ORIGINAL_TIMESTAMP) as IMAGERY_END_TIME_STAMP,	
			FIRST_VALUE (FRAME_IMAGE_FILE_PATH order by SRC_VIDEO_FRAME) as FIRST_FRAME_FILEPATH,
			FIRST_VALUE (CLASSIFYING_COUNTRY order by SRC_VIDEO_FRAME) as CLASSIFYING_COUNTRY,
			FIRST_VALUE (IMAGE_SOURCE_SENSOR order by SRC_VIDEO_FRAME) as IMAGE_SOURCE_SENSOR,
			FIRST_VALUE (IMAGE_COORDINATE_SYSTEM order by SRC_VIDEO_FRAME) as IMAGE_COORDINATE_SYSTEM,
			FIRST_VALUE (MISSION_ID order by SRC_VIDEO_FRAME) as MISSION_ID,	
			FIRST_VALUE (PLATFORM_TYPE order by SRC_VIDEO_FRAME) as PLATFORM_TYPE,	
			FIRST_VALUE (SENSOR_BAND order by SRC_VIDEO_FRAME) as SENSOR_BAND,	
			FIRST_VALUE (TAIL_NUMBER order by SRC_VIDEO_FRAME) as TAIL_NUMBER,
			count(distinct SEQUENCE_CLIP_UUID) as CLIP_COUNT,
			count(1) as SEQUENCE_FRAME_COUNT			
		from SEQUENCE_FRAME
		group by IMAGERY_PACKAGE_UUID) as F 
	on F.IMAGERY_PACKAGE_UUID = V.IMAGERY_PACKAGE_UUID
